//                                        Вид1 
void Method1()  // ЭТО ОПИСАН VOID МЕТОД тут не задано ни каких аргументов ОН НЕ ПРИНИМАНТ НИ ВОЗВРАЩАЕТ АРГУМЕНТЫ
{
    Console.WriteLine("Вид-1 Леонид");  /// тут  находятся операторы которые чтото делают с заданными выше аргументами 
                                    //что то выводится на экран  
}
Method1();  //ТАК МЫ ВЫЗЫВАЕМ МЕТОД-обязательно со скобками() -и ТУТ НИЧЕГО(аргументы)НЕ возвращаются т.к. (void) 
/// только  текст  " Леонид"  который мы сами указали
//***********************************************************************************************************
//                                        Вид2 
void Method2(string msg)  // ЭТО ОПИСАН VOID МЕТОД  он принимает  аргументы НО НЕ ВОЗВРАЩАЕТ.
{
    Console.WriteLine(msg);  /// тут оператор Console.WriteLine  работает с аргументом (msg) 
                             //  но его данные никуда  не будут выводится  т.к. (void) 
}
Method2("Вид-2 Суриков");//ТАК МЫ ВЫЗЫВАЕМ МЕТОД-обязательно со скобками() -и ТУТ НИЧЕГО(аргументы)НЕ возвращаются т.к. (void) 
/// только  текст  " Суриков"  который мы сами указали)
// ИЛИ  мы можем ИМЕНОВАТЬ аргумент (делать приаписку к аргументу) к какждому
Method2(msg:"Вид-2 Суриков - именованный к msg");//ТАК МЫ ВЫЗЫВАЕМ МЕТОД-обязательно со скобками() -и ТУТ НИЧЕГО(аргументы)НЕ возвращаются т.к. (void) 
/// только  текст  " Суриков"  который мы сами указали)
 
//                                           Вид  2.1
void Method21(string msg, int count)  // ЭТО ОПИСАН VOID МЕТОД  он принимает  аргументы НО НЕ ВОЗВРАЩАЕТ.
{
    int i = 0;
    while (i < count)
    {
    Console.WriteLine(msg);
        i++;
    }
}
Method21("Вид-2.1 Суууууриков",3);//ТАК МЫ ВЫЗЫВАЕМ МЕТОД-обязательно со скобками() 
                         //-и ТУТ НИЧЕГО(аргументы)НЕ возвращаются т.к. (void) 
                         // только 3 раза(задали) повторение текста  " Сууууууриков"  который мы сами указали)
//ИЛИ  мы можем ИМЕНОВАТЬ  Каждый аргумент (делать приаписку к аргументу) 
Method21(msg: "Вид-2.1 Суууууриков именованый к msg", count:2);
//***********************************************************************************************************
//                                          Вид 3
int Method3 ()//ЭТО ОПИСАН !НЕ! VOID МЕТОД (т.к. int) он НЕ принимает НИКАКИЕ аргументы НО ВОЗВРАЩАЕТ аргументы.
{
    return DateTime.Now.Year;// исполльзуем оператор RETURN чтобы вывести системную инфу -текущий год 
}
int year = Method3();//вводим новую переменную(типа int)с именем"yaer"
                      //и В НЕЁ ВЫЗЫВАЕМ полученые ЗНАЧЕНИЯ из Method3()
Console.Write("Вид-3    ");
Console.WriteLine (year);

//***********************************************************************************************************
//                                          Вид 4 с циклом while
//ЭТО ОПИСАН !НЕ! VOID МЕТОД (т.к. string)  он ПРИНИМАЕТ (обрабатывает) и ВОЗВРАЩАЕТ аргументы.
// string Method4 (string TEXT,int count) // т.е мы строку(string) "TEXT"  будем передавать 
//                                       // столько раз, сколько получим в "count"   
// {
//     int i = 0;                      //задаем переменные тела метода и для начала задаем им  =0 
//     string result = String.Empty;// стринговой переменной мы не можем задать 0, т.к. это НЕ ЦИФРЫ  
//                                   // вместо 0 добавляем  ПУСТОТУ т.е. пишем =String.Empty  или две ковычки =""
//  while (i < count)
//     {
//     result = result + TEXT;
//         i++;
//     }
//  return result;   // ВОЗВРАЩАЕМ ТО ЧТО ПОСЧИТАНО в ТЕЛЕ метода (поле обработок - действий)
// }

// String RES = Method4("Z",10);// //вводим новую переменную(типа string)с именем"RES"
//                           //и В НЕЁ ВЫЗЫВАЕМ полученые ЗНАЧЕНИЯ из Method4()  
// Console.Write("Вид-4 с циклом while  ");
// Console.WriteLine(RES);
//***********************************************************************************************************
//                                          Вид 4.1 с циклом 
//ЭТО ОПИСАН !НЕ! VOID МЕТОД (т.к. string)  он ПРИНИМАЕТ (обрабатывает) и ВОЗВРАЩАЕТ аргументы.
string Method4 (string TEXT,int count) // т.е мы строку(string)"TEXT"будем передавать 
                                      // столько раз, сколько получим в "count"   
{              
    string result = String.Empty;// стринговой переменной мы не можем задать 0, т.к. это НЕ ЦИФРЫ  
                                  // вместо 0 добавляем  ПУСТОТУ т.е. пишем =String.Empty  или две ковычки =""
 for (int i = 0;i < count;i++)// внутри   for   заданы параметры/ ( int i = 0)-инициализация счётчика
                              // ( i < count)-проверка условий //  (i++) - увеличение счетчика
    {
    result = result + TEXT;
    }
 return result;   // ВОЗВРАЩАЕМ ТО ЧТО ПОСЧИТАНО в ТЕЛЕ метода (поле обработок - действий)
}
String RES = Method4("Z",10);// //вводим новую переменную(типа string)с именем"RES"
                          //и В НЕЁ ВЫЗЫВАЕМ полученые ЗНАЧЕНИЯ из Method4()  
Console.Write("Вид-4.1 с циклом for  ");
Console.WriteLine(RES);


   